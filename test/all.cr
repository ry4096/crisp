#!../crisp



(def ALL.files stack
 (array symbol
  (str array-test2.cr)
  (str array-test.cr)
  (str bits-test2.cr)
  (str bits-test3.cr)
  (str bits-test.cr)
  (str code-test.cr)
  (str code-unsafe-test.cr)
  (str comment-test.cr)
  (str dl-group-test.cr)
  (str dltest1.cr)
  (str dot-test.cr)
  (str enum-test.cr)
  (str f-test3.cr)
  (str function-test1.cr)
  (str function-test2.cr)
  (str function-test3.cr)
  (str function-test4.cr)
  (str function-test6.cr)
  (str function-test7.cr)
  (str hash-test.cr)
  (str import-test1.cr)
  (str import-test2.cr)
  (str import-test3.cr)
  (str import-test4.cr)
  (str import-test5.cr)
  (str import-test6.cr)
  (str import-test7.cr)
  (str test1.cr)
  (str test2.cr)
  (str test3.cr)
  (str test4.cr)
  (str test5.cr)
  (str test6.cr)
  (str test7.cr)
  (str test8.cr)
  (str test9.cr)
  (str test10.cr)
  (str test11.cr)
  (str test12.cr)
  (str test13.cr)
  (str test14.cr)
  (str test14b.cr)
  (str test15.cr)
  (str let-test.cr)
  (str list-test.cr)
  (str load-test1.cr)
  (str load-test2.cr)
  (str long-test.cr)
  (str loop-test1.cr)
  (str loop-test2.cr)
  (str loop-test3.cr)
  (str loop-test5.cr)
  (str loop-test6.cr)
  (str macro-test1.cr)
  (str macro-test2.cr)
  (str malloc-test.cr)
  (str math-test.cr)
  (str prefix-test2.cr)
  (str prefix-test3.cr)
  (str ptr-test1.cr)
  (str ptr-test2.cr)
  (str ptr-test3.cr)
  (str ptr-test4.cr)
  (str ptr-test5.cr)
  (str qqtest1.cr)
  (str qqtest2.cr)
  (str qqtest3.cr)
  (str quote-test.cr)
  (str refc-test.cr)
  (str struct-test1.cr)
  (str struct-test2.cr)
  (str struct-test3.cr)
  (str struct-test4.cr)
  (str struct-test5.cr)
  (str type-test2.cr)
  (str type-test.cr)
  (str union-test.cr)
 )
)

(def ALL.i stack 0)

(for (set ALL.i 0) (< ALL.i (array.length ALL.files)) (set ALL.i (+ ALL.i 1))
 (print (str "\n\nALL running ") (ALL.files ALL.i) (str "\n\n"))
 (load (cast str (ALL.files ALL.i)))
 (print (str "\n\nALL done ") (ALL.files ALL.i) (str "\n\n"))
)
